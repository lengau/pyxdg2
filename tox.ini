# TODO: Migrate this to pyproject.toml, but only after tox supports it fully.
# See: https://github.com/tox-dev/tox/issues/999
[tox]
min_version = 4.2
no_package = true
env_list =
    poetry
    pypy3
    py38
    py39
    py310
    py311
requires =
    setuptools >= 58
labels =
    test = py38, py39, py310, py311, pypy3
    type = pyright
    lint = black_lint, ruff_lint
    ci-static = pyright, black_lint, ruff_lint
    fix = black_fix, ruff_fix
# Allow the environment to access the outer tmpdir without a circular dependency.
external_tmp_dir = {env:TMPDIR}

[gh]
python =
    3.8 = py38
    3.9 = py39
    3.10 = py310
    3.11 = py311
    pypy3.9 = pypy3

[vars]
tmp_dir = {external_tmp_dir:{env:XDG_RUNTIME_DIR:{root_dir}}}/tox-pyxdg2

[testenv]
depends = poetry
deps = -r requirements-dev.txt
commands =
    python -m pytest -vv -o cache_dir={env:TMPDIR}/pytest_cache --cov-report=xml:{env_log_dir}/coverage.xml --junitxml={env_log_dir}/junit.xml
env_log_dir = {[vars]tmp_dir}/log/{env_name}
env_tmp_dir = {[vars]tmp_dir}/{env_name}/tmp
set_env =
    # Make Python write to env_tmp_dir
    TMPDIR = {env_tmp_dir}
    ENV_LOG_DIR = {env_log_dir}
pass_env =
    PYTEST_ADDOPTS

[testenv:poetry]
# Environment just for generating requirements files with poetry.
base =
deps = poetry
env_tmp_dir = {[vars]tmp_dir}/{env_name}/tmp
env_log_dir = {[vars]tmp_dir}/log/{env_name}
commands =
    poetry update
;    poetry export -o requirements.txt
    poetry export --with dev -o requirements-dev.txt

[testenv:static-base]
base =
base_python = py311
description = Static linting
package = skip

[testenv:{black,ruff}_{lint,fix}]
base = static-base
depends =
    # Make sure we run black before ruff.
    ruff_fix: black_fix
    ruff_lint: black_lint
deps =
    ruff_{lint,fix}: ruff
    black_{lint,fix}: black
commands =
    ruff_lint: ruff pyxdg2 tests
    ruff_fix: ruff --fix pyxdg2 tests
    black_lint: black --check --diff pyxdg2 tests
    black_fix: black pyxdg2 tests

[testenv:pyright]
base = static-base
depends: py311
allowlist_externals = pyright
commands = pyright --venv-path {work_dir}
